name: Build wheels

on:
  push:
    branches:
      - main
  release:
    types:
      - published

env:
  CIBW_ARCHS_MACOS: x86_64 arm64
  CIBW_SKIP: cp36-* cp37-* pp* *i686

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install build requirements
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y premake4
          cd command_line_tools
          premake4 gmake
          cd ..
      - name: Install build requirements
        if: runner.os == 'macOS'
        run: |
          brew tap tonyseek/premake
          brew install tonyseek/premake/premake4
      - name: Install build requirements
        if: runner.os == 'Windows'
        run: |
          choco install -y premake.portable
          choco install -y visualstudio2019buildtools
          choco install -y visualstudio2019-workload-vctools
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.18.1
      - uses: actions/upload-artifact@v3
        with:
          name: wheelhouse
          path: ./wheelhouse/*.whl
  import_library:
    needs: [build_wheels]
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: Import library on ${{ matrix.os }} with Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/download-artifact@v3
        with:
          name: wheelhouse
          path: wheelhouse
      - run: python -m pip install --find-links wheelhouse charidotella
        shell: bash
      - run: python -c 'import charidotella'
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install build requirements
        if: runner.os == 'Linux'
        run: sudo apt-get install -y premake4
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*.tar.gz
  upload_pypi:
    needs: [build_wheels, import_library, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
            name: wheelhouse
            path: wheelhouse
      - uses: actions/download-artifact@v3
        with:
            name: dist
            path: dist
      - run: mv wheelhouse/* dist/
      - uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
